<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"	
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"	
xmlns:p="http://www.springframework.org/schema/p"	
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:mvc="http://www.springframework.org/schema/mvc"
xsi:schemaLocation="http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd	http://www.springframework.org/schema/context	http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
default-lazy-init="true">

	<!-- 启动事务添加配置 -->
    <context:component-scan base-package="cn.jxufe">  
        <!-- 排除扫描service标签 -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>   
    </context:component-scan>  
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
            <props>
                <!--
                <prop key="java.rmi.RemoteException">/errors/remote</prop> 
                <prop key="java.sql.SQLException">/errors/sql</prop> 
                <prop key="java.io.IOException">/errors/io</prop>
                <prop key="java.lang.NullPointerException">/errors/null</prop>
                <prop key="java.lang.ClassCastException">/errors/class</prop>
                <prop key="java.lang.NumberFormatException">/errors/number</prop>
                <prop key="java.lang.SecurityException">/errors/security</prop>
                <prop key="java.lang.IllegalStateException">/errors/ille</prop>
                <prop key="javax.servlet.jsp.JspException">/errors/jsp</prop>
                <prop key="javax.servlet.UnavailableException">/errors/servlet</prop>
                <prop key="org.springframework.validation.BindException">/errors/bind</prop>
                <prop key="java.lang.IndexOutOfBoundsException">/errors/index</prop>
                <prop key="java.lang.OutOfMemoryError">/errors/out</prop>
                -->
                <prop key="java.sql.SQLException">/errors/sql</prop> 
                <prop key="java.lang.Exception">/errors/all</prop>
                <!--下面可以自定义异常  -->
                
           	</props>
        </property>
	</bean>
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="webBindingInitializer">
			<bean class="cn.jxufe.core.web.DefaultBindingInitializer"/>
		</property>
		<!-- 注册JASON转换器 -->
		<property name="messageConverters">  
	        <list>  
	            <ref bean="mappingJacksonHttpMessageConverter"/>  
	            <ref bean="utf8StringHttpMessageConverter"/>
	        </list>  
    	</property> 
	</bean>
	
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
	    <property name="supportedMediaTypes">  
	        <list>  
				<value>text/plain;charset=UTF-8</value>
	            <value>text/html;charset=UTF-8</value>  
	            <value>application/json;charset=UTF-8</value>
	        </list>  
	    </property>  
	</bean>  
	<bean id="utf8StringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/pages/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<!-- spring 自带上传类 -->
   	<!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="5000000"/>
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="uploadTempDir" value="upload/temp/"/>
		<property name="resolveLazily" value="true"/> 
	</bean>-->

	<!-- 继承后自己写的上传类 -->
	<bean id="multipartResolver" class="cn.jxufe.core.file.CustomMultipartResolver">   
	 	<property name="maxUploadSize" value="5000000"/>
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="uploadTempDir" value="upload/temp/"/>
		<!--resolveLazily属性启用是为了推迟文件解析，以便在UploadAction 中捕获文件大小异常  -->
		<property name="resolveLazily" value="true"/> 
	 </bean>
	
	
    <!-- 当配置了<mvc:annotation-driven/>后，会自动加载org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping和org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter，所以如果显示的配置则需去掉配置<mvc:annotation-driven/> -->
	<!--<mvc:annotation-driven/>-->
</beans>